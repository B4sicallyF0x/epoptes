#!/bin/sh
# This file is part of Epoptes, http://epoptes.org
# Copyright 2012-2018 the Epoptes team, see AUTHORS.
# SPDX-License-Identifier: GPL-3.0-or-later

usage() {
    printf "Usage: export \$($0)\n%s" \
"
Output DISPLAY and XAUTHORITY for the current user's X screen.
A root user can then use those to access the user's display.
"
}

die() {
    printf "%s\n" "$@" >&2
    exit 1
}

exit_if_found() {
    # Check if DISPLAY/XAUTHORITY are valid.
    # XAUTHORITY may even be empty, in which case it must not be exported.
    test -n "$DISPLAY" || return
    export DISPLAY XAUTHORITY
    test -n "$XAUTHORITY" || unset XAUTHORITY
    if xwininfo -root -size >/dev/null 2>&1; then
        echo "DISPLAY=$DISPLAY"
        test -n "$XAUTHORITY" && echo "XAUTHORITY=$XAUTHORITY"
        exit 0
    else
        unset DISPLAY XAUTHORITY
    fi
}

if [ $# -gt 0 ]; then
    die "$(usage)"
fi

# Plan A: check if the variables are already set
exit_if_found

# Plan B: check if we can get the info from some running process
for p in $(pgrep -x 'ldm|gdmgreeter|kdm_greet|lxdm-greeter-gt|dbus-daemon'); do
    # The first DISPLAY= is only there to prevent a possible syntax error
    export DISPLAY="$DISPLAY" $(tr '\0' '\n' 2>/dev/null < /proc/$p/environ |
        egrep '^DISPLAY=|^XAUTHORITY=')
    exit_if_found
done

# Plan C: try ck-list-sessions
while read var equals value; do
    case "$var" in
        Session*)
            unset USER DISPLAY XAUTHORITY
            ;;
        unix-user)
            value=${value%\'}
            USER=${value#\'}
            ;;
        x11-display)
            value=${value%\'}
            DISPLAY=${value#\'}
            if [ -n "$DISPLAY" ]; then
                XAUTHORITY="$(getent passwd "$USER" | cut -d: -f6)/.Xauthority"
                exit_if_found
            fi
            ;;
    esac
done <<EOF
$(ck-list-sessions)
EOF

# Plan D: give up!
echo "DISPLAY=
XAUTHORITY="
die "Could not detect or access the active display"
